
Display_motors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  000008d2  00000946  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  0000095a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000009b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000009f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c5e  00000000  00000000  00000a54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b7  00000000  00000000  000016b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000571  00000000  00000000  00001d69  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c8  00000000  00000000  000022dc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c3  00000000  00000000  000023a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000631  00000000  00000000  00002767  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00002d98  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
   4:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
   8:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
   c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  10:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  14:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  18:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  1c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  20:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  24:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  28:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  2c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  30:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  34:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  38:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  3c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  40:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  44:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  48:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  4c:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  50:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__bad_interrupt>
  54:	f4 00       	.word	0x00f4	; ????
  56:	fa 00       	.word	0x00fa	; ????
  58:	00 01       	movw	r0, r0
  5a:	06 01       	movw	r0, r12
  5c:	0c 01       	movw	r0, r24
  5e:	12 01       	movw	r2, r4
  60:	18 01       	movw	r2, r16
  62:	42 01       	movw	r8, r4
  64:	1e 01       	movw	r2, r28
  66:	24 01       	movw	r4, r8
  68:	2a 01       	movw	r4, r20
  6a:	30 01       	movw	r6, r0
  6c:	f2 00       	.word	0x00f2	; ????
  6e:	36 01       	movw	r6, r12
  70:	f2 00       	.word	0x00f2	; ????
  72:	3c 01       	movw	r6, r24

00000074 <__ctors_end>:
  74:	11 24       	eor	r1, r1
  76:	1f be       	out	0x3f, r1	; 63
  78:	cf e5       	ldi	r28, 0x5F	; 95
  7a:	d8 e0       	ldi	r29, 0x08	; 8
  7c:	de bf       	out	0x3e, r29	; 62
  7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
  80:	10 e0       	ldi	r17, 0x00	; 0
  82:	a0 e6       	ldi	r26, 0x60	; 96
  84:	b0 e0       	ldi	r27, 0x00	; 0
  86:	e2 ed       	ldi	r30, 0xD2	; 210
  88:	f8 e0       	ldi	r31, 0x08	; 8
  8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
  8c:	05 90       	lpm	r0, Z+
  8e:	0d 92       	st	X+, r0
  90:	a4 37       	cpi	r26, 0x74	; 116
  92:	b1 07       	cpc	r27, r17
  94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>
  96:	0e 94 4d 01 	call	0x29a	; 0x29a <main>
  9a:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <_exit>

0000009e <__bad_interrupt>:
  9e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a2 <LCD_Cmd>:
	AinLow = (int)ADCL;		/* Read lower byte*/
	Ain = (int)ADCH*256;		/* Read higher 2 bits and 
					Multiply with weight */
	Ain = Ain + AinLow;				
	return(Ain);			/* Return digital value*/
}
  a2:	95 b3       	in	r25, 0x15	; 21
  a4:	9f 70       	andi	r25, 0x0F	; 15
  a6:	28 2f       	mov	r18, r24
  a8:	20 7f       	andi	r18, 0xF0	; 240
  aa:	92 2b       	or	r25, r18
  ac:	95 bb       	out	0x15, r25	; 21
  ae:	95 b3       	in	r25, 0x15	; 21
  b0:	9e 7f       	andi	r25, 0xFE	; 254
  b2:	95 bb       	out	0x15, r25	; 21
  b4:	95 b3       	in	r25, 0x15	; 21
  b6:	92 60       	ori	r25, 0x02	; 2
  b8:	95 bb       	out	0x15, r25	; 21
  ba:	32 e0       	ldi	r19, 0x02	; 2
  bc:	3a 95       	dec	r19
  be:	f1 f7       	brne	.-4      	; 0xbc <LCD_Cmd+0x1a>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <LCD_Cmd+0x20>
  c2:	95 b3       	in	r25, 0x15	; 21
  c4:	9d 7f       	andi	r25, 0xFD	; 253
  c6:	95 bb       	out	0x15, r25	; 21
  c8:	ef e8       	ldi	r30, 0x8F	; 143
  ca:	f1 e0       	ldi	r31, 0x01	; 1
  cc:	31 97       	sbiw	r30, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <LCD_Cmd+0x2a>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <LCD_Cmd+0x30>
  d2:	00 00       	nop
  d4:	25 b3       	in	r18, 0x15	; 21
  d6:	f0 e1       	ldi	r31, 0x10	; 16
  d8:	8f 9f       	mul	r24, r31
  da:	c0 01       	movw	r24, r0
  dc:	11 24       	eor	r1, r1
  de:	92 2f       	mov	r25, r18
  e0:	9f 70       	andi	r25, 0x0F	; 15
  e2:	89 2b       	or	r24, r25
  e4:	85 bb       	out	0x15, r24	; 21
  e6:	85 b3       	in	r24, 0x15	; 21
  e8:	82 60       	ori	r24, 0x02	; 2
  ea:	85 bb       	out	0x15, r24	; 21
  ec:	32 e0       	ldi	r19, 0x02	; 2
  ee:	3a 95       	dec	r19
  f0:	f1 f7       	brne	.-4      	; 0xee <LCD_Cmd+0x4c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <LCD_Cmd+0x52>
  f4:	85 b3       	in	r24, 0x15	; 21
  f6:	8d 7f       	andi	r24, 0xFD	; 253
  f8:	85 bb       	out	0x15, r24	; 21
  fa:	8f e9       	ldi	r24, 0x9F	; 159
  fc:	9f e0       	ldi	r25, 0x0F	; 15
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <LCD_Cmd+0x5c>
 102:	00 c0       	rjmp	.+0      	; 0x104 <LCD_Cmd+0x62>
 104:	00 00       	nop
 106:	08 95       	ret

00000108 <LCD_Char>:
 108:	95 b3       	in	r25, 0x15	; 21
 10a:	9f 70       	andi	r25, 0x0F	; 15
 10c:	28 2f       	mov	r18, r24
 10e:	20 7f       	andi	r18, 0xF0	; 240
 110:	92 2b       	or	r25, r18
 112:	95 bb       	out	0x15, r25	; 21
 114:	95 b3       	in	r25, 0x15	; 21
 116:	91 60       	ori	r25, 0x01	; 1
 118:	95 bb       	out	0x15, r25	; 21
 11a:	95 b3       	in	r25, 0x15	; 21
 11c:	92 60       	ori	r25, 0x02	; 2
 11e:	95 bb       	out	0x15, r25	; 21
 120:	32 e0       	ldi	r19, 0x02	; 2
 122:	3a 95       	dec	r19
 124:	f1 f7       	brne	.-4      	; 0x122 <LCD_Char+0x1a>
 126:	00 c0       	rjmp	.+0      	; 0x128 <LCD_Char+0x20>
 128:	95 b3       	in	r25, 0x15	; 21
 12a:	9d 7f       	andi	r25, 0xFD	; 253
 12c:	95 bb       	out	0x15, r25	; 21
 12e:	ef e8       	ldi	r30, 0x8F	; 143
 130:	f1 e0       	ldi	r31, 0x01	; 1
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_Char+0x2a>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_Char+0x30>
 138:	00 00       	nop
 13a:	25 b3       	in	r18, 0x15	; 21
 13c:	f0 e1       	ldi	r31, 0x10	; 16
 13e:	8f 9f       	mul	r24, r31
 140:	c0 01       	movw	r24, r0
 142:	11 24       	eor	r1, r1
 144:	92 2f       	mov	r25, r18
 146:	9f 70       	andi	r25, 0x0F	; 15
 148:	89 2b       	or	r24, r25
 14a:	85 bb       	out	0x15, r24	; 21
 14c:	85 b3       	in	r24, 0x15	; 21
 14e:	82 60       	ori	r24, 0x02	; 2
 150:	85 bb       	out	0x15, r24	; 21
 152:	32 e0       	ldi	r19, 0x02	; 2
 154:	3a 95       	dec	r19
 156:	f1 f7       	brne	.-4      	; 0x154 <LCD_Char+0x4c>
 158:	00 c0       	rjmp	.+0      	; 0x15a <LCD_Char+0x52>
 15a:	85 b3       	in	r24, 0x15	; 21
 15c:	8d 7f       	andi	r24, 0xFD	; 253
 15e:	85 bb       	out	0x15, r24	; 21
 160:	8f e9       	ldi	r24, 0x9F	; 159
 162:	9f e0       	ldi	r25, 0x0F	; 15
 164:	01 97       	sbiw	r24, 0x01	; 1
 166:	f1 f7       	brne	.-4      	; 0x164 <LCD_Char+0x5c>
 168:	00 c0       	rjmp	.+0      	; 0x16a <LCD_Char+0x62>
 16a:	00 00       	nop
 16c:	08 95       	ret

0000016e <LCD_Init>:
 16e:	8f ef       	ldi	r24, 0xFF	; 255
 170:	84 bb       	out	0x14, r24	; 20
 172:	8f e3       	ldi	r24, 0x3F	; 63
 174:	9c e9       	ldi	r25, 0x9C	; 156
 176:	01 97       	sbiw	r24, 0x01	; 1
 178:	f1 f7       	brne	.-4      	; 0x176 <LCD_Init+0x8>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <LCD_Init+0xe>
 17c:	00 00       	nop
 17e:	82 e0       	ldi	r24, 0x02	; 2
 180:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_Cmd>
 184:	88 e2       	ldi	r24, 0x28	; 40
 186:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_Cmd>
 18a:	8c e0       	ldi	r24, 0x0C	; 12
 18c:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_Cmd>
 190:	86 e0       	ldi	r24, 0x06	; 6
 192:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_Cmd>
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	0e 94 51 00 	call	0xa2	; 0xa2 <LCD_Cmd>
 19c:	08 95       	ret

0000019e <LCD_String>:
 19e:	0f 93       	push	r16
 1a0:	1f 93       	push	r17
 1a2:	cf 93       	push	r28
 1a4:	df 93       	push	r29
 1a6:	8c 01       	movw	r16, r24
 1a8:	c0 e0       	ldi	r28, 0x00	; 0
 1aa:	d0 e0       	ldi	r29, 0x00	; 0
 1ac:	03 c0       	rjmp	.+6      	; 0x1b4 <LCD_String+0x16>
 1ae:	0e 94 84 00 	call	0x108	; 0x108 <LCD_Char>
 1b2:	21 96       	adiw	r28, 0x01	; 1
 1b4:	f8 01       	movw	r30, r16
 1b6:	ec 0f       	add	r30, r28
 1b8:	fd 1f       	adc	r31, r29
 1ba:	80 81       	ld	r24, Z
 1bc:	81 11       	cpse	r24, r1
 1be:	f7 cf       	rjmp	.-18     	; 0x1ae <LCD_String+0x10>
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	1f 91       	pop	r17
 1c6:	0f 91       	pop	r16
 1c8:	08 95       	ret

000001ca <read_keypad>:

/*Keypad configuration*/
uint8_t read_keypad(void)
{
	// Wait for the data to be available
	while (!(PIND & (1 << PD2)));
 1ca:	82 9b       	sbis	0x10, 2	; 16
 1cc:	fe cf       	rjmp	.-4      	; 0x1ca <read_keypad>

	// Read the data from the keypad
	int value = PINB;
 1ce:	e6 b3       	in	r30, 0x16	; 22
	int data = 255; // initialize to a default value
	switch (value)
 1d0:	8e 2f       	mov	r24, r30
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	80 31       	cpi	r24, 0x10	; 16
 1d6:	91 05       	cpc	r25, r1
 1d8:	28 f4       	brcc	.+10     	; 0x1e4 <read_keypad+0x1a>
 1da:	fc 01       	movw	r30, r24
 1dc:	e6 5d       	subi	r30, 0xD6	; 214
 1de:	ff 4f       	sbci	r31, 0xFF	; 255
 1e0:	0c 94 77 01 	jmp	0x2ee	; 0x2ee <__tablejump2__>
	// Wait for the data to be available
	while (!(PIND & (1 << PD2)));

	// Read the data from the keypad
	int value = PINB;
	int data = 255; // initialize to a default value
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	4f c0       	rjmp	.+158    	; 0x286 <read_keypad+0xbc>
	switch (value)
	{
		case 0:
		data = 7;
		LCD_String("*");
 1e8:	80 e6       	ldi	r24, 0x60	; 96
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
	int value = PINB;
	int data = 255; // initialize to a default value
	switch (value)
	{
		case 0:
		data = 7;
 1f0:	87 e0       	ldi	r24, 0x07	; 7
		LCD_String("*");
		break;
 1f2:	49 c0       	rjmp	.+146    	; 0x286 <read_keypad+0xbc>
		case 1:
		data = 8;
		LCD_String("*");
 1f4:	80 e6       	ldi	r24, 0x60	; 96
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 0:
		data = 7;
		LCD_String("*");
		break;
		case 1:
		data = 8;
 1fc:	88 e0       	ldi	r24, 0x08	; 8
		LCD_String("*");
		break;
 1fe:	43 c0       	rjmp	.+134    	; 0x286 <read_keypad+0xbc>
		case 2:
		data = 9;
		LCD_String("*");
 200:	80 e6       	ldi	r24, 0x60	; 96
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 1:
		data = 8;
		LCD_String("*");
		break;
		case 2:
		data = 9;
 208:	89 e0       	ldi	r24, 0x09	; 9
		LCD_String("*");
		break;
 20a:	3d c0       	rjmp	.+122    	; 0x286 <read_keypad+0xbc>
		case 3:
		LCD_String("/");
 20c:	82 e6       	ldi	r24, 0x62	; 98
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
	// Wait for the data to be available
	while (!(PIND & (1 << PD2)));

	// Read the data from the keypad
	int value = PINB;
	int data = 255; // initialize to a default value
 214:	8f ef       	ldi	r24, 0xFF	; 255
		data = 9;
		LCD_String("*");
		break;
		case 3:
		LCD_String("/");
		break;
 216:	37 c0       	rjmp	.+110    	; 0x286 <read_keypad+0xbc>
		case 4:
		data = 4;
		LCD_String("*");
 218:	80 e6       	ldi	r24, 0x60	; 96
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		break;
		case 3:
		LCD_String("/");
		break;
		case 4:
		data = 4;
 220:	84 e0       	ldi	r24, 0x04	; 4
		LCD_String("*");
		break;
 222:	31 c0       	rjmp	.+98     	; 0x286 <read_keypad+0xbc>
		case 5:
		data = 5;
		LCD_String("*");
 224:	80 e6       	ldi	r24, 0x60	; 96
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 4:
		data = 4;
		LCD_String("*");
		break;
		case 5:
		data = 5;
 22c:	85 e0       	ldi	r24, 0x05	; 5
		LCD_String("*");
		break;
 22e:	2b c0       	rjmp	.+86     	; 0x286 <read_keypad+0xbc>
		case 6:
		data = 6;
		LCD_String("*");
 230:	80 e6       	ldi	r24, 0x60	; 96
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 5:
		data = 5;
		LCD_String("*");
		break;
		case 6:
		data = 6;
 238:	86 e0       	ldi	r24, 0x06	; 6
		LCD_String("*");
		break;
 23a:	25 c0       	rjmp	.+74     	; 0x286 <read_keypad+0xbc>
		//LCD_String("*");
		data = 200; // A generic value to indicate that the key is *
		break;
		case 8:
		data = 1;
		LCD_String("*");
 23c:	80 e6       	ldi	r24, 0x60	; 96
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 7:
		//LCD_String("*");
		data = 200; // A generic value to indicate that the key is *
		break;
		case 8:
		data = 1;
 244:	81 e0       	ldi	r24, 0x01	; 1
		LCD_String("*");
		break;
 246:	1f c0       	rjmp	.+62     	; 0x286 <read_keypad+0xbc>
		case 9:
		data = 2;
		LCD_String("*");
 248:	80 e6       	ldi	r24, 0x60	; 96
 24a:	90 e0       	ldi	r25, 0x00	; 0
 24c:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 8:
		data = 1;
		LCD_String("*");
		break;
		case 9:
		data = 2;
 250:	82 e0       	ldi	r24, 0x02	; 2
		LCD_String("*");
		break;
 252:	19 c0       	rjmp	.+50     	; 0x286 <read_keypad+0xbc>
		case 10:
		data = 3;
		LCD_String("*");
 254:	80 e6       	ldi	r24, 0x60	; 96
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 9:
		data = 2;
		LCD_String("*");
		break;
		case 10:
		data = 3;
 25c:	83 e0       	ldi	r24, 0x03	; 3
		LCD_String("*");
		break;
 25e:	13 c0       	rjmp	.+38     	; 0x286 <read_keypad+0xbc>
		case 11:
		LCD_String("-");
 260:	84 e6       	ldi	r24, 0x64	; 100
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
	// Wait for the data to be available
	while (!(PIND & (1 << PD2)));

	// Read the data from the keypad
	int value = PINB;
	int data = 255; // initialize to a default value
 268:	8f ef       	ldi	r24, 0xFF	; 255
		data = 3;
		LCD_String("*");
		break;
		case 11:
		LCD_String("-");
		break;
 26a:	0d c0       	rjmp	.+26     	; 0x286 <read_keypad+0xbc>
		// reset the password if safe is open
		break;

		case 13:
		data = 0;
		LCD_String("*");
 26c:	80 e6       	ldi	r24, 0x60	; 96
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
		case 12: // ON/C
		// reset the password if safe is open
		break;

		case 13:
		data = 0;
 274:	80 e0       	ldi	r24, 0x00	; 0
		LCD_String("*");
		break;
 276:	07 c0       	rjmp	.+14     	; 0x286 <read_keypad+0xbc>
		case 14:
		
		break;
		case 15:
		LCD_String("+");
 278:	86 e6       	ldi	r24, 0x66	; 102
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
	// Wait for the data to be available
	while (!(PIND & (1 << PD2)));

	// Read the data from the keypad
	int value = PINB;
	int data = 255; // initialize to a default value
 280:	8f ef       	ldi	r24, 0xFF	; 255
		case 14:
		
		break;
		case 15:
		LCD_String("+");
		break;
 282:	01 c0       	rjmp	.+2      	; 0x286 <read_keypad+0xbc>
		data = 6;
		LCD_String("*");
		break;
		case 7:
		//LCD_String("*");
		data = 200; // A generic value to indicate that the key is *
 284:	88 ec       	ldi	r24, 0xC8	; 200
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 286:	2f ef       	ldi	r18, 0xFF	; 255
 288:	34 e3       	ldi	r19, 0x34	; 52
 28a:	9c e0       	ldi	r25, 0x0C	; 12
 28c:	21 50       	subi	r18, 0x01	; 1
 28e:	30 40       	sbci	r19, 0x00	; 0
 290:	90 40       	sbci	r25, 0x00	; 0
 292:	e1 f7       	brne	.-8      	; 0x28c <read_keypad+0xc2>
 294:	00 c0       	rjmp	.+0      	; 0x296 <read_keypad+0xcc>
 296:	00 00       	nop

	// Debounce delay
	_delay_ms(500);

	return data;
}
 298:	08 95       	ret

0000029a <main>:
#include "keypad.h"



int main(void)
{
 29a:	cf 93       	push	r28
 29c:	df 93       	push	r29
 29e:	cd b7       	in	r28, 0x3d	; 61
 2a0:	de b7       	in	r29, 0x3e	; 62
 2a2:	2a 97       	sbiw	r28, 0x0a	; 10
 2a4:	0f b6       	in	r0, 0x3f	; 63
 2a6:	f8 94       	cli
 2a8:	de bf       	out	0x3e, r29	; 62
 2aa:	0f be       	out	0x3f, r0	; 63
 2ac:	cd bf       	out	0x3d, r28	; 61
    // Initialize the LCD
    LCD_Init();
 2ae:	0e 94 b7 00 	call	0x16e	; 0x16e <LCD_Init>
    while (1) 
    {
        // Read the data from the keypad
        int value = read_keypad();
 2b2:	0e 94 e5 00 	call	0x1ca	; 0x1ca <read_keypad>
 2b6:	18 2f       	mov	r17, r24
        // Display the data on the LCD
        LCD_String("Value: ");
 2b8:	88 e6       	ldi	r24, 0x68	; 104
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
        char str[10];
        sprintf(str, "%d", value);
 2c0:	1f 92       	push	r1
 2c2:	1f 93       	push	r17
 2c4:	80 e7       	ldi	r24, 0x70	; 112
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	9f 93       	push	r25
 2ca:	8f 93       	push	r24
 2cc:	8e 01       	movw	r16, r28
 2ce:	0f 5f       	subi	r16, 0xFF	; 255
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
 2d2:	1f 93       	push	r17
 2d4:	0f 93       	push	r16
 2d6:	0e 94 7d 01 	call	0x2fa	; 0x2fa <sprintf>
        LCD_String(str);
 2da:	c8 01       	movw	r24, r16
 2dc:	0e 94 cf 00 	call	0x19e	; 0x19e <LCD_String>
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	e2 cf       	rjmp	.-60     	; 0x2b2 <main+0x18>

000002ee <__tablejump2__>:
 2ee:	ee 0f       	add	r30, r30
 2f0:	ff 1f       	adc	r31, r31
 2f2:	05 90       	lpm	r0, Z+
 2f4:	f4 91       	lpm	r31, Z
 2f6:	e0 2d       	mov	r30, r0
 2f8:	09 94       	ijmp

000002fa <sprintf>:
 2fa:	ae e0       	ldi	r26, 0x0E	; 14
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	e3 e8       	ldi	r30, 0x83	; 131
 300:	f1 e0       	ldi	r31, 0x01	; 1
 302:	0c 94 3e 04 	jmp	0x87c	; 0x87c <__prologue_saves__+0x1c>
 306:	0d 89       	ldd	r16, Y+21	; 0x15
 308:	1e 89       	ldd	r17, Y+22	; 0x16
 30a:	86 e0       	ldi	r24, 0x06	; 6
 30c:	8c 83       	std	Y+4, r24	; 0x04
 30e:	1a 83       	std	Y+2, r17	; 0x02
 310:	09 83       	std	Y+1, r16	; 0x01
 312:	8f ef       	ldi	r24, 0xFF	; 255
 314:	9f e7       	ldi	r25, 0x7F	; 127
 316:	9e 83       	std	Y+6, r25	; 0x06
 318:	8d 83       	std	Y+5, r24	; 0x05
 31a:	ae 01       	movw	r20, r28
 31c:	47 5e       	subi	r20, 0xE7	; 231
 31e:	5f 4f       	sbci	r21, 0xFF	; 255
 320:	6f 89       	ldd	r22, Y+23	; 0x17
 322:	78 8d       	ldd	r23, Y+24	; 0x18
 324:	ce 01       	movw	r24, r28
 326:	01 96       	adiw	r24, 0x01	; 1
 328:	0e 94 9f 01 	call	0x33e	; 0x33e <vfprintf>
 32c:	ef 81       	ldd	r30, Y+7	; 0x07
 32e:	f8 85       	ldd	r31, Y+8	; 0x08
 330:	e0 0f       	add	r30, r16
 332:	f1 1f       	adc	r31, r17
 334:	10 82       	st	Z, r1
 336:	2e 96       	adiw	r28, 0x0e	; 14
 338:	e4 e0       	ldi	r30, 0x04	; 4
 33a:	0c 94 5a 04 	jmp	0x8b4	; 0x8b4 <__epilogue_restores__+0x1c>

0000033e <vfprintf>:
 33e:	ab e0       	ldi	r26, 0x0B	; 11
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	e5 ea       	ldi	r30, 0xA5	; 165
 344:	f1 e0       	ldi	r31, 0x01	; 1
 346:	0c 94 30 04 	jmp	0x860	; 0x860 <__prologue_saves__>
 34a:	6c 01       	movw	r12, r24
 34c:	7b 01       	movw	r14, r22
 34e:	8a 01       	movw	r16, r20
 350:	fc 01       	movw	r30, r24
 352:	17 82       	std	Z+7, r1	; 0x07
 354:	16 82       	std	Z+6, r1	; 0x06
 356:	83 81       	ldd	r24, Z+3	; 0x03
 358:	81 ff       	sbrs	r24, 1
 35a:	cc c1       	rjmp	.+920    	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
 35c:	ce 01       	movw	r24, r28
 35e:	01 96       	adiw	r24, 0x01	; 1
 360:	3c 01       	movw	r6, r24
 362:	f6 01       	movw	r30, r12
 364:	93 81       	ldd	r25, Z+3	; 0x03
 366:	f7 01       	movw	r30, r14
 368:	93 fd       	sbrc	r25, 3
 36a:	85 91       	lpm	r24, Z+
 36c:	93 ff       	sbrs	r25, 3
 36e:	81 91       	ld	r24, Z+
 370:	7f 01       	movw	r14, r30
 372:	88 23       	and	r24, r24
 374:	09 f4       	brne	.+2      	; 0x378 <vfprintf+0x3a>
 376:	ba c1       	rjmp	.+884    	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 378:	85 32       	cpi	r24, 0x25	; 37
 37a:	39 f4       	brne	.+14     	; 0x38a <vfprintf+0x4c>
 37c:	93 fd       	sbrc	r25, 3
 37e:	85 91       	lpm	r24, Z+
 380:	93 ff       	sbrs	r25, 3
 382:	81 91       	ld	r24, Z+
 384:	7f 01       	movw	r14, r30
 386:	85 32       	cpi	r24, 0x25	; 37
 388:	29 f4       	brne	.+10     	; 0x394 <vfprintf+0x56>
 38a:	b6 01       	movw	r22, r12
 38c:	90 e0       	ldi	r25, 0x00	; 0
 38e:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 392:	e7 cf       	rjmp	.-50     	; 0x362 <vfprintf+0x24>
 394:	91 2c       	mov	r9, r1
 396:	21 2c       	mov	r2, r1
 398:	31 2c       	mov	r3, r1
 39a:	ff e1       	ldi	r31, 0x1F	; 31
 39c:	f3 15       	cp	r31, r3
 39e:	d8 f0       	brcs	.+54     	; 0x3d6 <vfprintf+0x98>
 3a0:	8b 32       	cpi	r24, 0x2B	; 43
 3a2:	79 f0       	breq	.+30     	; 0x3c2 <vfprintf+0x84>
 3a4:	38 f4       	brcc	.+14     	; 0x3b4 <vfprintf+0x76>
 3a6:	80 32       	cpi	r24, 0x20	; 32
 3a8:	79 f0       	breq	.+30     	; 0x3c8 <vfprintf+0x8a>
 3aa:	83 32       	cpi	r24, 0x23	; 35
 3ac:	a1 f4       	brne	.+40     	; 0x3d6 <vfprintf+0x98>
 3ae:	23 2d       	mov	r18, r3
 3b0:	20 61       	ori	r18, 0x10	; 16
 3b2:	1d c0       	rjmp	.+58     	; 0x3ee <vfprintf+0xb0>
 3b4:	8d 32       	cpi	r24, 0x2D	; 45
 3b6:	61 f0       	breq	.+24     	; 0x3d0 <vfprintf+0x92>
 3b8:	80 33       	cpi	r24, 0x30	; 48
 3ba:	69 f4       	brne	.+26     	; 0x3d6 <vfprintf+0x98>
 3bc:	23 2d       	mov	r18, r3
 3be:	21 60       	ori	r18, 0x01	; 1
 3c0:	16 c0       	rjmp	.+44     	; 0x3ee <vfprintf+0xb0>
 3c2:	83 2d       	mov	r24, r3
 3c4:	82 60       	ori	r24, 0x02	; 2
 3c6:	38 2e       	mov	r3, r24
 3c8:	e3 2d       	mov	r30, r3
 3ca:	e4 60       	ori	r30, 0x04	; 4
 3cc:	3e 2e       	mov	r3, r30
 3ce:	2a c0       	rjmp	.+84     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 3d0:	f3 2d       	mov	r31, r3
 3d2:	f8 60       	ori	r31, 0x08	; 8
 3d4:	1d c0       	rjmp	.+58     	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
 3d6:	37 fc       	sbrc	r3, 7
 3d8:	2d c0       	rjmp	.+90     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 3da:	20 ed       	ldi	r18, 0xD0	; 208
 3dc:	28 0f       	add	r18, r24
 3de:	2a 30       	cpi	r18, 0x0A	; 10
 3e0:	40 f0       	brcs	.+16     	; 0x3f2 <vfprintf+0xb4>
 3e2:	8e 32       	cpi	r24, 0x2E	; 46
 3e4:	b9 f4       	brne	.+46     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 3e6:	36 fc       	sbrc	r3, 6
 3e8:	81 c1       	rjmp	.+770    	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 3ea:	23 2d       	mov	r18, r3
 3ec:	20 64       	ori	r18, 0x40	; 64
 3ee:	32 2e       	mov	r3, r18
 3f0:	19 c0       	rjmp	.+50     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 3f2:	36 fe       	sbrs	r3, 6
 3f4:	06 c0       	rjmp	.+12     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3f6:	8a e0       	ldi	r24, 0x0A	; 10
 3f8:	98 9e       	mul	r9, r24
 3fa:	20 0d       	add	r18, r0
 3fc:	11 24       	eor	r1, r1
 3fe:	92 2e       	mov	r9, r18
 400:	11 c0       	rjmp	.+34     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 402:	ea e0       	ldi	r30, 0x0A	; 10
 404:	2e 9e       	mul	r2, r30
 406:	20 0d       	add	r18, r0
 408:	11 24       	eor	r1, r1
 40a:	22 2e       	mov	r2, r18
 40c:	f3 2d       	mov	r31, r3
 40e:	f0 62       	ori	r31, 0x20	; 32
 410:	3f 2e       	mov	r3, r31
 412:	08 c0       	rjmp	.+16     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 414:	8c 36       	cpi	r24, 0x6C	; 108
 416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 418:	83 2d       	mov	r24, r3
 41a:	80 68       	ori	r24, 0x80	; 128
 41c:	38 2e       	mov	r3, r24
 41e:	02 c0       	rjmp	.+4      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 420:	88 36       	cpi	r24, 0x68	; 104
 422:	41 f4       	brne	.+16     	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 424:	f7 01       	movw	r30, r14
 426:	93 fd       	sbrc	r25, 3
 428:	85 91       	lpm	r24, Z+
 42a:	93 ff       	sbrs	r25, 3
 42c:	81 91       	ld	r24, Z+
 42e:	7f 01       	movw	r14, r30
 430:	81 11       	cpse	r24, r1
 432:	b3 cf       	rjmp	.-154    	; 0x39a <vfprintf+0x5c>
 434:	98 2f       	mov	r25, r24
 436:	9f 7d       	andi	r25, 0xDF	; 223
 438:	95 54       	subi	r25, 0x45	; 69
 43a:	93 30       	cpi	r25, 0x03	; 3
 43c:	28 f4       	brcc	.+10     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 43e:	0c 5f       	subi	r16, 0xFC	; 252
 440:	1f 4f       	sbci	r17, 0xFF	; 255
 442:	9f e3       	ldi	r25, 0x3F	; 63
 444:	99 83       	std	Y+1, r25	; 0x01
 446:	0d c0       	rjmp	.+26     	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 448:	83 36       	cpi	r24, 0x63	; 99
 44a:	31 f0       	breq	.+12     	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
 44c:	83 37       	cpi	r24, 0x73	; 115
 44e:	71 f0       	breq	.+28     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 450:	83 35       	cpi	r24, 0x53	; 83
 452:	09 f0       	breq	.+2      	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 454:	59 c0       	rjmp	.+178    	; 0x508 <__EEPROM_REGION_LENGTH__+0x108>
 456:	21 c0       	rjmp	.+66     	; 0x49a <__EEPROM_REGION_LENGTH__+0x9a>
 458:	f8 01       	movw	r30, r16
 45a:	80 81       	ld	r24, Z
 45c:	89 83       	std	Y+1, r24	; 0x01
 45e:	0e 5f       	subi	r16, 0xFE	; 254
 460:	1f 4f       	sbci	r17, 0xFF	; 255
 462:	88 24       	eor	r8, r8
 464:	83 94       	inc	r8
 466:	91 2c       	mov	r9, r1
 468:	53 01       	movw	r10, r6
 46a:	13 c0       	rjmp	.+38     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
 46c:	28 01       	movw	r4, r16
 46e:	f2 e0       	ldi	r31, 0x02	; 2
 470:	4f 0e       	add	r4, r31
 472:	51 1c       	adc	r5, r1
 474:	f8 01       	movw	r30, r16
 476:	a0 80       	ld	r10, Z
 478:	b1 80       	ldd	r11, Z+1	; 0x01
 47a:	36 fe       	sbrs	r3, 6
 47c:	03 c0       	rjmp	.+6      	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 47e:	69 2d       	mov	r22, r9
 480:	70 e0       	ldi	r23, 0x00	; 0
 482:	02 c0       	rjmp	.+4      	; 0x488 <__EEPROM_REGION_LENGTH__+0x88>
 484:	6f ef       	ldi	r22, 0xFF	; 255
 486:	7f ef       	ldi	r23, 0xFF	; 255
 488:	c5 01       	movw	r24, r10
 48a:	0e 94 8b 03 	call	0x716	; 0x716 <strnlen>
 48e:	4c 01       	movw	r8, r24
 490:	82 01       	movw	r16, r4
 492:	f3 2d       	mov	r31, r3
 494:	ff 77       	andi	r31, 0x7F	; 127
 496:	3f 2e       	mov	r3, r31
 498:	16 c0       	rjmp	.+44     	; 0x4c6 <__EEPROM_REGION_LENGTH__+0xc6>
 49a:	28 01       	movw	r4, r16
 49c:	22 e0       	ldi	r18, 0x02	; 2
 49e:	42 0e       	add	r4, r18
 4a0:	51 1c       	adc	r5, r1
 4a2:	f8 01       	movw	r30, r16
 4a4:	a0 80       	ld	r10, Z
 4a6:	b1 80       	ldd	r11, Z+1	; 0x01
 4a8:	36 fe       	sbrs	r3, 6
 4aa:	03 c0       	rjmp	.+6      	; 0x4b2 <__EEPROM_REGION_LENGTH__+0xb2>
 4ac:	69 2d       	mov	r22, r9
 4ae:	70 e0       	ldi	r23, 0x00	; 0
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b2:	6f ef       	ldi	r22, 0xFF	; 255
 4b4:	7f ef       	ldi	r23, 0xFF	; 255
 4b6:	c5 01       	movw	r24, r10
 4b8:	0e 94 80 03 	call	0x700	; 0x700 <strnlen_P>
 4bc:	4c 01       	movw	r8, r24
 4be:	f3 2d       	mov	r31, r3
 4c0:	f0 68       	ori	r31, 0x80	; 128
 4c2:	3f 2e       	mov	r3, r31
 4c4:	82 01       	movw	r16, r4
 4c6:	33 fc       	sbrc	r3, 3
 4c8:	1b c0       	rjmp	.+54     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4ca:	82 2d       	mov	r24, r2
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	88 16       	cp	r8, r24
 4d0:	99 06       	cpc	r9, r25
 4d2:	b0 f4       	brcc	.+44     	; 0x500 <__EEPROM_REGION_LENGTH__+0x100>
 4d4:	b6 01       	movw	r22, r12
 4d6:	80 e2       	ldi	r24, 0x20	; 32
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 4de:	2a 94       	dec	r2
 4e0:	f4 cf       	rjmp	.-24     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
 4e2:	f5 01       	movw	r30, r10
 4e4:	37 fc       	sbrc	r3, 7
 4e6:	85 91       	lpm	r24, Z+
 4e8:	37 fe       	sbrs	r3, 7
 4ea:	81 91       	ld	r24, Z+
 4ec:	5f 01       	movw	r10, r30
 4ee:	b6 01       	movw	r22, r12
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 4f6:	21 10       	cpse	r2, r1
 4f8:	2a 94       	dec	r2
 4fa:	21 e0       	ldi	r18, 0x01	; 1
 4fc:	82 1a       	sub	r8, r18
 4fe:	91 08       	sbc	r9, r1
 500:	81 14       	cp	r8, r1
 502:	91 04       	cpc	r9, r1
 504:	71 f7       	brne	.-36     	; 0x4e2 <__EEPROM_REGION_LENGTH__+0xe2>
 506:	e8 c0       	rjmp	.+464    	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 508:	84 36       	cpi	r24, 0x64	; 100
 50a:	11 f0       	breq	.+4      	; 0x510 <__EEPROM_REGION_LENGTH__+0x110>
 50c:	89 36       	cpi	r24, 0x69	; 105
 50e:	41 f5       	brne	.+80     	; 0x560 <__EEPROM_REGION_LENGTH__+0x160>
 510:	f8 01       	movw	r30, r16
 512:	37 fe       	sbrs	r3, 7
 514:	07 c0       	rjmp	.+14     	; 0x524 <__EEPROM_REGION_LENGTH__+0x124>
 516:	60 81       	ld	r22, Z
 518:	71 81       	ldd	r23, Z+1	; 0x01
 51a:	82 81       	ldd	r24, Z+2	; 0x02
 51c:	93 81       	ldd	r25, Z+3	; 0x03
 51e:	0c 5f       	subi	r16, 0xFC	; 252
 520:	1f 4f       	sbci	r17, 0xFF	; 255
 522:	08 c0       	rjmp	.+16     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
 524:	60 81       	ld	r22, Z
 526:	71 81       	ldd	r23, Z+1	; 0x01
 528:	07 2e       	mov	r0, r23
 52a:	00 0c       	add	r0, r0
 52c:	88 0b       	sbc	r24, r24
 52e:	99 0b       	sbc	r25, r25
 530:	0e 5f       	subi	r16, 0xFE	; 254
 532:	1f 4f       	sbci	r17, 0xFF	; 255
 534:	f3 2d       	mov	r31, r3
 536:	ff 76       	andi	r31, 0x6F	; 111
 538:	3f 2e       	mov	r3, r31
 53a:	97 ff       	sbrs	r25, 7
 53c:	09 c0       	rjmp	.+18     	; 0x550 <__EEPROM_REGION_LENGTH__+0x150>
 53e:	90 95       	com	r25
 540:	80 95       	com	r24
 542:	70 95       	com	r23
 544:	61 95       	neg	r22
 546:	7f 4f       	sbci	r23, 0xFF	; 255
 548:	8f 4f       	sbci	r24, 0xFF	; 255
 54a:	9f 4f       	sbci	r25, 0xFF	; 255
 54c:	f0 68       	ori	r31, 0x80	; 128
 54e:	3f 2e       	mov	r3, r31
 550:	2a e0       	ldi	r18, 0x0A	; 10
 552:	30 e0       	ldi	r19, 0x00	; 0
 554:	a3 01       	movw	r20, r6
 556:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__ultoa_invert>
 55a:	88 2e       	mov	r8, r24
 55c:	86 18       	sub	r8, r6
 55e:	45 c0       	rjmp	.+138    	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 560:	85 37       	cpi	r24, 0x75	; 117
 562:	31 f4       	brne	.+12     	; 0x570 <__EEPROM_REGION_LENGTH__+0x170>
 564:	23 2d       	mov	r18, r3
 566:	2f 7e       	andi	r18, 0xEF	; 239
 568:	b2 2e       	mov	r11, r18
 56a:	2a e0       	ldi	r18, 0x0A	; 10
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	25 c0       	rjmp	.+74     	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
 570:	93 2d       	mov	r25, r3
 572:	99 7f       	andi	r25, 0xF9	; 249
 574:	b9 2e       	mov	r11, r25
 576:	8f 36       	cpi	r24, 0x6F	; 111
 578:	c1 f0       	breq	.+48     	; 0x5aa <__EEPROM_REGION_LENGTH__+0x1aa>
 57a:	18 f4       	brcc	.+6      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
 57c:	88 35       	cpi	r24, 0x58	; 88
 57e:	79 f0       	breq	.+30     	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
 580:	b5 c0       	rjmp	.+362    	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 582:	80 37       	cpi	r24, 0x70	; 112
 584:	19 f0       	breq	.+6      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
 586:	88 37       	cpi	r24, 0x78	; 120
 588:	21 f0       	breq	.+8      	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
 58a:	b0 c0       	rjmp	.+352    	; 0x6ec <__EEPROM_REGION_LENGTH__+0x2ec>
 58c:	e9 2f       	mov	r30, r25
 58e:	e0 61       	ori	r30, 0x10	; 16
 590:	be 2e       	mov	r11, r30
 592:	b4 fe       	sbrs	r11, 4
 594:	0d c0       	rjmp	.+26     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 596:	fb 2d       	mov	r31, r11
 598:	f4 60       	ori	r31, 0x04	; 4
 59a:	bf 2e       	mov	r11, r31
 59c:	09 c0       	rjmp	.+18     	; 0x5b0 <__EEPROM_REGION_LENGTH__+0x1b0>
 59e:	34 fe       	sbrs	r3, 4
 5a0:	0a c0       	rjmp	.+20     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5a2:	29 2f       	mov	r18, r25
 5a4:	26 60       	ori	r18, 0x06	; 6
 5a6:	b2 2e       	mov	r11, r18
 5a8:	06 c0       	rjmp	.+12     	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
 5aa:	28 e0       	ldi	r18, 0x08	; 8
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	05 c0       	rjmp	.+10     	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
 5b0:	20 e1       	ldi	r18, 0x10	; 16
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <__EEPROM_REGION_LENGTH__+0x1ba>
 5b6:	20 e1       	ldi	r18, 0x10	; 16
 5b8:	32 e0       	ldi	r19, 0x02	; 2
 5ba:	f8 01       	movw	r30, r16
 5bc:	b7 fe       	sbrs	r11, 7
 5be:	07 c0       	rjmp	.+14     	; 0x5ce <__EEPROM_REGION_LENGTH__+0x1ce>
 5c0:	60 81       	ld	r22, Z
 5c2:	71 81       	ldd	r23, Z+1	; 0x01
 5c4:	82 81       	ldd	r24, Z+2	; 0x02
 5c6:	93 81       	ldd	r25, Z+3	; 0x03
 5c8:	0c 5f       	subi	r16, 0xFC	; 252
 5ca:	1f 4f       	sbci	r17, 0xFF	; 255
 5cc:	06 c0       	rjmp	.+12     	; 0x5da <__EEPROM_REGION_LENGTH__+0x1da>
 5ce:	60 81       	ld	r22, Z
 5d0:	71 81       	ldd	r23, Z+1	; 0x01
 5d2:	80 e0       	ldi	r24, 0x00	; 0
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	0e 5f       	subi	r16, 0xFE	; 254
 5d8:	1f 4f       	sbci	r17, 0xFF	; 255
 5da:	a3 01       	movw	r20, r6
 5dc:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <__ultoa_invert>
 5e0:	88 2e       	mov	r8, r24
 5e2:	86 18       	sub	r8, r6
 5e4:	fb 2d       	mov	r31, r11
 5e6:	ff 77       	andi	r31, 0x7F	; 127
 5e8:	3f 2e       	mov	r3, r31
 5ea:	36 fe       	sbrs	r3, 6
 5ec:	0d c0       	rjmp	.+26     	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
 5ee:	23 2d       	mov	r18, r3
 5f0:	2e 7f       	andi	r18, 0xFE	; 254
 5f2:	a2 2e       	mov	r10, r18
 5f4:	89 14       	cp	r8, r9
 5f6:	58 f4       	brcc	.+22     	; 0x60e <__EEPROM_REGION_LENGTH__+0x20e>
 5f8:	34 fe       	sbrs	r3, 4
 5fa:	0b c0       	rjmp	.+22     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 5fc:	32 fc       	sbrc	r3, 2
 5fe:	09 c0       	rjmp	.+18     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 600:	83 2d       	mov	r24, r3
 602:	8e 7e       	andi	r24, 0xEE	; 238
 604:	a8 2e       	mov	r10, r24
 606:	05 c0       	rjmp	.+10     	; 0x612 <__EEPROM_REGION_LENGTH__+0x212>
 608:	b8 2c       	mov	r11, r8
 60a:	a3 2c       	mov	r10, r3
 60c:	03 c0       	rjmp	.+6      	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 60e:	b8 2c       	mov	r11, r8
 610:	01 c0       	rjmp	.+2      	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
 612:	b9 2c       	mov	r11, r9
 614:	a4 fe       	sbrs	r10, 4
 616:	0f c0       	rjmp	.+30     	; 0x636 <__EEPROM_REGION_LENGTH__+0x236>
 618:	fe 01       	movw	r30, r28
 61a:	e8 0d       	add	r30, r8
 61c:	f1 1d       	adc	r31, r1
 61e:	80 81       	ld	r24, Z
 620:	80 33       	cpi	r24, 0x30	; 48
 622:	21 f4       	brne	.+8      	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
 624:	9a 2d       	mov	r25, r10
 626:	99 7e       	andi	r25, 0xE9	; 233
 628:	a9 2e       	mov	r10, r25
 62a:	09 c0       	rjmp	.+18     	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 62c:	a2 fe       	sbrs	r10, 2
 62e:	06 c0       	rjmp	.+12     	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
 630:	b3 94       	inc	r11
 632:	b3 94       	inc	r11
 634:	04 c0       	rjmp	.+8      	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 636:	8a 2d       	mov	r24, r10
 638:	86 78       	andi	r24, 0x86	; 134
 63a:	09 f0       	breq	.+2      	; 0x63e <__EEPROM_REGION_LENGTH__+0x23e>
 63c:	b3 94       	inc	r11
 63e:	a3 fc       	sbrc	r10, 3
 640:	11 c0       	rjmp	.+34     	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
 642:	a0 fe       	sbrs	r10, 0
 644:	06 c0       	rjmp	.+12     	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 646:	b2 14       	cp	r11, r2
 648:	88 f4       	brcc	.+34     	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
 64a:	28 0c       	add	r2, r8
 64c:	92 2c       	mov	r9, r2
 64e:	9b 18       	sub	r9, r11
 650:	0e c0       	rjmp	.+28     	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 652:	b2 14       	cp	r11, r2
 654:	60 f4       	brcc	.+24     	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 656:	b6 01       	movw	r22, r12
 658:	80 e2       	ldi	r24, 0x20	; 32
 65a:	90 e0       	ldi	r25, 0x00	; 0
 65c:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 660:	b3 94       	inc	r11
 662:	f7 cf       	rjmp	.-18     	; 0x652 <__EEPROM_REGION_LENGTH__+0x252>
 664:	b2 14       	cp	r11, r2
 666:	18 f4       	brcc	.+6      	; 0x66e <__EEPROM_REGION_LENGTH__+0x26e>
 668:	2b 18       	sub	r2, r11
 66a:	02 c0       	rjmp	.+4      	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
 66c:	98 2c       	mov	r9, r8
 66e:	21 2c       	mov	r2, r1
 670:	a4 fe       	sbrs	r10, 4
 672:	10 c0       	rjmp	.+32     	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
 674:	b6 01       	movw	r22, r12
 676:	80 e3       	ldi	r24, 0x30	; 48
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 67e:	a2 fe       	sbrs	r10, 2
 680:	17 c0       	rjmp	.+46     	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 682:	a1 fc       	sbrc	r10, 1
 684:	03 c0       	rjmp	.+6      	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
 686:	88 e7       	ldi	r24, 0x78	; 120
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	02 c0       	rjmp	.+4      	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
 68c:	88 e5       	ldi	r24, 0x58	; 88
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	b6 01       	movw	r22, r12
 692:	0c c0       	rjmp	.+24     	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
 694:	8a 2d       	mov	r24, r10
 696:	86 78       	andi	r24, 0x86	; 134
 698:	59 f0       	breq	.+22     	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 69a:	a1 fe       	sbrs	r10, 1
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <__EEPROM_REGION_LENGTH__+0x2a2>
 69e:	8b e2       	ldi	r24, 0x2B	; 43
 6a0:	01 c0       	rjmp	.+2      	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
 6a2:	80 e2       	ldi	r24, 0x20	; 32
 6a4:	a7 fc       	sbrc	r10, 7
 6a6:	8d e2       	ldi	r24, 0x2D	; 45
 6a8:	b6 01       	movw	r22, r12
 6aa:	90 e0       	ldi	r25, 0x00	; 0
 6ac:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 6b0:	89 14       	cp	r8, r9
 6b2:	38 f4       	brcc	.+14     	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6b4:	b6 01       	movw	r22, r12
 6b6:	80 e3       	ldi	r24, 0x30	; 48
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 6be:	9a 94       	dec	r9
 6c0:	f7 cf       	rjmp	.-18     	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
 6c2:	8a 94       	dec	r8
 6c4:	f3 01       	movw	r30, r6
 6c6:	e8 0d       	add	r30, r8
 6c8:	f1 1d       	adc	r31, r1
 6ca:	80 81       	ld	r24, Z
 6cc:	b6 01       	movw	r22, r12
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 6d4:	81 10       	cpse	r8, r1
 6d6:	f5 cf       	rjmp	.-22     	; 0x6c2 <__EEPROM_REGION_LENGTH__+0x2c2>
 6d8:	22 20       	and	r2, r2
 6da:	09 f4       	brne	.+2      	; 0x6de <__EEPROM_REGION_LENGTH__+0x2de>
 6dc:	42 ce       	rjmp	.-892    	; 0x362 <vfprintf+0x24>
 6de:	b6 01       	movw	r22, r12
 6e0:	80 e2       	ldi	r24, 0x20	; 32
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 94 96 03 	call	0x72c	; 0x72c <fputc>
 6e8:	2a 94       	dec	r2
 6ea:	f6 cf       	rjmp	.-20     	; 0x6d8 <__EEPROM_REGION_LENGTH__+0x2d8>
 6ec:	f6 01       	movw	r30, r12
 6ee:	86 81       	ldd	r24, Z+6	; 0x06
 6f0:	97 81       	ldd	r25, Z+7	; 0x07
 6f2:	02 c0       	rjmp	.+4      	; 0x6f8 <__EEPROM_REGION_LENGTH__+0x2f8>
 6f4:	8f ef       	ldi	r24, 0xFF	; 255
 6f6:	9f ef       	ldi	r25, 0xFF	; 255
 6f8:	2b 96       	adiw	r28, 0x0b	; 11
 6fa:	e2 e1       	ldi	r30, 0x12	; 18
 6fc:	0c 94 4c 04 	jmp	0x898	; 0x898 <__epilogue_restores__>

00000700 <strnlen_P>:
 700:	fc 01       	movw	r30, r24
 702:	05 90       	lpm	r0, Z+
 704:	61 50       	subi	r22, 0x01	; 1
 706:	70 40       	sbci	r23, 0x00	; 0
 708:	01 10       	cpse	r0, r1
 70a:	d8 f7       	brcc	.-10     	; 0x702 <strnlen_P+0x2>
 70c:	80 95       	com	r24
 70e:	90 95       	com	r25
 710:	8e 0f       	add	r24, r30
 712:	9f 1f       	adc	r25, r31
 714:	08 95       	ret

00000716 <strnlen>:
 716:	fc 01       	movw	r30, r24
 718:	61 50       	subi	r22, 0x01	; 1
 71a:	70 40       	sbci	r23, 0x00	; 0
 71c:	01 90       	ld	r0, Z+
 71e:	01 10       	cpse	r0, r1
 720:	d8 f7       	brcc	.-10     	; 0x718 <strnlen+0x2>
 722:	80 95       	com	r24
 724:	90 95       	com	r25
 726:	8e 0f       	add	r24, r30
 728:	9f 1f       	adc	r25, r31
 72a:	08 95       	ret

0000072c <fputc>:
 72c:	0f 93       	push	r16
 72e:	1f 93       	push	r17
 730:	cf 93       	push	r28
 732:	df 93       	push	r29
 734:	fb 01       	movw	r30, r22
 736:	23 81       	ldd	r18, Z+3	; 0x03
 738:	21 fd       	sbrc	r18, 1
 73a:	03 c0       	rjmp	.+6      	; 0x742 <fputc+0x16>
 73c:	8f ef       	ldi	r24, 0xFF	; 255
 73e:	9f ef       	ldi	r25, 0xFF	; 255
 740:	2c c0       	rjmp	.+88     	; 0x79a <fputc+0x6e>
 742:	22 ff       	sbrs	r18, 2
 744:	16 c0       	rjmp	.+44     	; 0x772 <fputc+0x46>
 746:	46 81       	ldd	r20, Z+6	; 0x06
 748:	57 81       	ldd	r21, Z+7	; 0x07
 74a:	24 81       	ldd	r18, Z+4	; 0x04
 74c:	35 81       	ldd	r19, Z+5	; 0x05
 74e:	42 17       	cp	r20, r18
 750:	53 07       	cpc	r21, r19
 752:	44 f4       	brge	.+16     	; 0x764 <fputc+0x38>
 754:	a0 81       	ld	r26, Z
 756:	b1 81       	ldd	r27, Z+1	; 0x01
 758:	9d 01       	movw	r18, r26
 75a:	2f 5f       	subi	r18, 0xFF	; 255
 75c:	3f 4f       	sbci	r19, 0xFF	; 255
 75e:	31 83       	std	Z+1, r19	; 0x01
 760:	20 83       	st	Z, r18
 762:	8c 93       	st	X, r24
 764:	26 81       	ldd	r18, Z+6	; 0x06
 766:	37 81       	ldd	r19, Z+7	; 0x07
 768:	2f 5f       	subi	r18, 0xFF	; 255
 76a:	3f 4f       	sbci	r19, 0xFF	; 255
 76c:	37 83       	std	Z+7, r19	; 0x07
 76e:	26 83       	std	Z+6, r18	; 0x06
 770:	14 c0       	rjmp	.+40     	; 0x79a <fputc+0x6e>
 772:	8b 01       	movw	r16, r22
 774:	ec 01       	movw	r28, r24
 776:	fb 01       	movw	r30, r22
 778:	00 84       	ldd	r0, Z+8	; 0x08
 77a:	f1 85       	ldd	r31, Z+9	; 0x09
 77c:	e0 2d       	mov	r30, r0
 77e:	09 95       	icall
 780:	89 2b       	or	r24, r25
 782:	e1 f6       	brne	.-72     	; 0x73c <fputc+0x10>
 784:	d8 01       	movw	r26, r16
 786:	16 96       	adiw	r26, 0x06	; 6
 788:	8d 91       	ld	r24, X+
 78a:	9c 91       	ld	r25, X
 78c:	17 97       	sbiw	r26, 0x07	; 7
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	17 96       	adiw	r26, 0x07	; 7
 792:	9c 93       	st	X, r25
 794:	8e 93       	st	-X, r24
 796:	16 97       	sbiw	r26, 0x06	; 6
 798:	ce 01       	movw	r24, r28
 79a:	df 91       	pop	r29
 79c:	cf 91       	pop	r28
 79e:	1f 91       	pop	r17
 7a0:	0f 91       	pop	r16
 7a2:	08 95       	ret

000007a4 <__ultoa_invert>:
 7a4:	fa 01       	movw	r30, r20
 7a6:	aa 27       	eor	r26, r26
 7a8:	28 30       	cpi	r18, 0x08	; 8
 7aa:	51 f1       	breq	.+84     	; 0x800 <__DATA_REGION_LENGTH__>
 7ac:	20 31       	cpi	r18, 0x10	; 16
 7ae:	81 f1       	breq	.+96     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 7b0:	e8 94       	clt
 7b2:	6f 93       	push	r22
 7b4:	6e 7f       	andi	r22, 0xFE	; 254
 7b6:	6e 5f       	subi	r22, 0xFE	; 254
 7b8:	7f 4f       	sbci	r23, 0xFF	; 255
 7ba:	8f 4f       	sbci	r24, 0xFF	; 255
 7bc:	9f 4f       	sbci	r25, 0xFF	; 255
 7be:	af 4f       	sbci	r26, 0xFF	; 255
 7c0:	b1 e0       	ldi	r27, 0x01	; 1
 7c2:	3e d0       	rcall	.+124    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 7c4:	b4 e0       	ldi	r27, 0x04	; 4
 7c6:	3c d0       	rcall	.+120    	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 7c8:	67 0f       	add	r22, r23
 7ca:	78 1f       	adc	r23, r24
 7cc:	89 1f       	adc	r24, r25
 7ce:	9a 1f       	adc	r25, r26
 7d0:	a1 1d       	adc	r26, r1
 7d2:	68 0f       	add	r22, r24
 7d4:	79 1f       	adc	r23, r25
 7d6:	8a 1f       	adc	r24, r26
 7d8:	91 1d       	adc	r25, r1
 7da:	a1 1d       	adc	r26, r1
 7dc:	6a 0f       	add	r22, r26
 7de:	71 1d       	adc	r23, r1
 7e0:	81 1d       	adc	r24, r1
 7e2:	91 1d       	adc	r25, r1
 7e4:	a1 1d       	adc	r26, r1
 7e6:	20 d0       	rcall	.+64     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 7e8:	09 f4       	brne	.+2      	; 0x7ec <__ultoa_invert+0x48>
 7ea:	68 94       	set
 7ec:	3f 91       	pop	r19
 7ee:	2a e0       	ldi	r18, 0x0A	; 10
 7f0:	26 9f       	mul	r18, r22
 7f2:	11 24       	eor	r1, r1
 7f4:	30 19       	sub	r19, r0
 7f6:	30 5d       	subi	r19, 0xD0	; 208
 7f8:	31 93       	st	Z+, r19
 7fa:	de f6       	brtc	.-74     	; 0x7b2 <__ultoa_invert+0xe>
 7fc:	cf 01       	movw	r24, r30
 7fe:	08 95       	ret
 800:	46 2f       	mov	r20, r22
 802:	47 70       	andi	r20, 0x07	; 7
 804:	40 5d       	subi	r20, 0xD0	; 208
 806:	41 93       	st	Z+, r20
 808:	b3 e0       	ldi	r27, 0x03	; 3
 80a:	0f d0       	rcall	.+30     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 80c:	c9 f7       	brne	.-14     	; 0x800 <__DATA_REGION_LENGTH__>
 80e:	f6 cf       	rjmp	.-20     	; 0x7fc <__ultoa_invert+0x58>
 810:	46 2f       	mov	r20, r22
 812:	4f 70       	andi	r20, 0x0F	; 15
 814:	40 5d       	subi	r20, 0xD0	; 208
 816:	4a 33       	cpi	r20, 0x3A	; 58
 818:	18 f0       	brcs	.+6      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
 81a:	49 5d       	subi	r20, 0xD9	; 217
 81c:	31 fd       	sbrc	r19, 1
 81e:	40 52       	subi	r20, 0x20	; 32
 820:	41 93       	st	Z+, r20
 822:	02 d0       	rcall	.+4      	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 824:	a9 f7       	brne	.-22     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
 826:	ea cf       	rjmp	.-44     	; 0x7fc <__ultoa_invert+0x58>
 828:	b4 e0       	ldi	r27, 0x04	; 4
 82a:	a6 95       	lsr	r26
 82c:	97 95       	ror	r25
 82e:	87 95       	ror	r24
 830:	77 95       	ror	r23
 832:	67 95       	ror	r22
 834:	ba 95       	dec	r27
 836:	c9 f7       	brne	.-14     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 838:	00 97       	sbiw	r24, 0x00	; 0
 83a:	61 05       	cpc	r22, r1
 83c:	71 05       	cpc	r23, r1
 83e:	08 95       	ret
 840:	9b 01       	movw	r18, r22
 842:	ac 01       	movw	r20, r24
 844:	0a 2e       	mov	r0, r26
 846:	06 94       	lsr	r0
 848:	57 95       	ror	r21
 84a:	47 95       	ror	r20
 84c:	37 95       	ror	r19
 84e:	27 95       	ror	r18
 850:	ba 95       	dec	r27
 852:	c9 f7       	brne	.-14     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 854:	62 0f       	add	r22, r18
 856:	73 1f       	adc	r23, r19
 858:	84 1f       	adc	r24, r20
 85a:	95 1f       	adc	r25, r21
 85c:	a0 1d       	adc	r26, r0
 85e:	08 95       	ret

00000860 <__prologue_saves__>:
 860:	2f 92       	push	r2
 862:	3f 92       	push	r3
 864:	4f 92       	push	r4
 866:	5f 92       	push	r5
 868:	6f 92       	push	r6
 86a:	7f 92       	push	r7
 86c:	8f 92       	push	r8
 86e:	9f 92       	push	r9
 870:	af 92       	push	r10
 872:	bf 92       	push	r11
 874:	cf 92       	push	r12
 876:	df 92       	push	r13
 878:	ef 92       	push	r14
 87a:	ff 92       	push	r15
 87c:	0f 93       	push	r16
 87e:	1f 93       	push	r17
 880:	cf 93       	push	r28
 882:	df 93       	push	r29
 884:	cd b7       	in	r28, 0x3d	; 61
 886:	de b7       	in	r29, 0x3e	; 62
 888:	ca 1b       	sub	r28, r26
 88a:	db 0b       	sbc	r29, r27
 88c:	0f b6       	in	r0, 0x3f	; 63
 88e:	f8 94       	cli
 890:	de bf       	out	0x3e, r29	; 62
 892:	0f be       	out	0x3f, r0	; 63
 894:	cd bf       	out	0x3d, r28	; 61
 896:	09 94       	ijmp

00000898 <__epilogue_restores__>:
 898:	2a 88       	ldd	r2, Y+18	; 0x12
 89a:	39 88       	ldd	r3, Y+17	; 0x11
 89c:	48 88       	ldd	r4, Y+16	; 0x10
 89e:	5f 84       	ldd	r5, Y+15	; 0x0f
 8a0:	6e 84       	ldd	r6, Y+14	; 0x0e
 8a2:	7d 84       	ldd	r7, Y+13	; 0x0d
 8a4:	8c 84       	ldd	r8, Y+12	; 0x0c
 8a6:	9b 84       	ldd	r9, Y+11	; 0x0b
 8a8:	aa 84       	ldd	r10, Y+10	; 0x0a
 8aa:	b9 84       	ldd	r11, Y+9	; 0x09
 8ac:	c8 84       	ldd	r12, Y+8	; 0x08
 8ae:	df 80       	ldd	r13, Y+7	; 0x07
 8b0:	ee 80       	ldd	r14, Y+6	; 0x06
 8b2:	fd 80       	ldd	r15, Y+5	; 0x05
 8b4:	0c 81       	ldd	r16, Y+4	; 0x04
 8b6:	1b 81       	ldd	r17, Y+3	; 0x03
 8b8:	aa 81       	ldd	r26, Y+2	; 0x02
 8ba:	b9 81       	ldd	r27, Y+1	; 0x01
 8bc:	ce 0f       	add	r28, r30
 8be:	d1 1d       	adc	r29, r1
 8c0:	0f b6       	in	r0, 0x3f	; 63
 8c2:	f8 94       	cli
 8c4:	de bf       	out	0x3e, r29	; 62
 8c6:	0f be       	out	0x3f, r0	; 63
 8c8:	cd bf       	out	0x3d, r28	; 61
 8ca:	ed 01       	movw	r28, r26
 8cc:	08 95       	ret

000008ce <_exit>:
 8ce:	f8 94       	cli

000008d0 <__stop_program>:
 8d0:	ff cf       	rjmp	.-2      	; 0x8d0 <__stop_program>
